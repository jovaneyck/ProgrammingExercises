<?xml version="1.0" encoding="UTF-8"?>
<testrun name="ClassesAndObjectsTest" project="LanguageFeatures" tests="7" started="7" failures="0" errors="1" ignored="0">
  <testsuite name="test.ClassesAndObjectsTest" time="0.112">
    <testcase name="classes should have properties" classname="test.ClassesAndObjectsTest" time="0.045"/>
    <testcase name="classes should support read-only attributes" classname="test.ClassesAndObjectsTest" time="0.001"/>
    <testcase name="classes should support mutable state" classname="test.ClassesAndObjectsTest" time="0.008"/>
    <testcase name="classes should support private methods" classname="test.ClassesAndObjectsTest" time="0.005"/>
    <testcase name="classes should support invariants" classname="test.ClassesAndObjectsTest" time="0.023">
      <error>java.lang.IllegalArgumentException: requirement failed&#13;
	at scala.Predef$.require(Predef.scala:221)&#13;
	at test.ClassesAndObjectsTest$$anonfun$5$Account$1.&lt;init&gt;(ClassesAndObjects.scala:39)&#13;
	at test.ClassesAndObjectsTest$$anonfun$5.apply$mcV$sp(ClassesAndObjects.scala:42)&#13;
	at test.ClassesAndObjectsTest$$anonfun$5.apply(ClassesAndObjects.scala:37)&#13;
	at test.ClassesAndObjectsTest$$anonfun$5.apply(ClassesAndObjects.scala:37)&#13;
	at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)&#13;
	at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)&#13;
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)&#13;
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)&#13;
	at org.scalatest.Transformer.apply(Transformer.scala:22)&#13;
	at org.scalatest.Transformer.apply(Transformer.scala:20)&#13;
	at org.scalatest.FlatSpecLike$$anon$1.apply(FlatSpecLike.scala:1617)&#13;
	at org.scalatest.Suite$class.withFixture(Suite.scala:1106)&#13;
	at org.scalatest.FlatSpec.withFixture(FlatSpec.scala:1497)&#13;
	at org.scalatest.FlatSpecLike$class.invokeWithFixture$1(FlatSpecLike.scala:1614)&#13;
	at org.scalatest.FlatSpecLike$$anonfun$runTest$1.apply(FlatSpecLike.scala:1626)&#13;
	at org.scalatest.FlatSpecLike$$anonfun$runTest$1.apply(FlatSpecLike.scala:1626)&#13;
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)&#13;
	at org.scalatest.FlatSpecLike$class.runTest(FlatSpecLike.scala:1626)&#13;
	at org.scalatest.FlatSpec.runTest(FlatSpec.scala:1497)&#13;
	at org.scalatest.FlatSpecLike$$anonfun$runTests$1.apply(FlatSpecLike.scala:1684)&#13;
	at org.scalatest.FlatSpecLike$$anonfun$runTests$1.apply(FlatSpecLike.scala:1684)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)&#13;
	at scala.collection.immutable.List.foreach(List.scala:318)&#13;
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)&#13;
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:390)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:427)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)&#13;
	at scala.collection.immutable.List.foreach(List.scala:318)&#13;
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)&#13;
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)&#13;
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)&#13;
	at org.scalatest.FlatSpecLike$class.runTests(FlatSpecLike.scala:1684)&#13;
	at org.scalatest.FlatSpec.runTests(FlatSpec.scala:1497)&#13;
	at org.scalatest.Suite$class.run(Suite.scala:1423)&#13;
	at org.scalatest.FlatSpec.org$scalatest$FlatSpecLike$$super$run(FlatSpec.scala:1497)&#13;
	at org.scalatest.FlatSpecLike$$anonfun$run$1.apply(FlatSpecLike.scala:1730)&#13;
	at org.scalatest.FlatSpecLike$$anonfun$run$1.apply(FlatSpecLike.scala:1730)&#13;
	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)&#13;
	at org.scalatest.FlatSpecLike$class.run(FlatSpecLike.scala:1730)&#13;
	at org.scalatest.FlatSpec.run(FlatSpec.scala:1497)&#13;
	at org.scalatest.junit.JUnitRunner.run(JUnitRunner.scala:97)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&#13;
&#13;
</error>
    </testcase>
    <testcase name="case classes should not require the new keyword, handy for pattern matching!" classname="test.ClassesAndObjectsTest" time="0.008"/>
    <testcase name="objects should act as a singleton" classname="test.ClassesAndObjectsTest" time="0.012"/>
  </testsuite>
</testrun>
