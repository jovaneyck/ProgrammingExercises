<?xml version="1.0" encoding="UTF-8"?>
<testrun name="TestSuite" project="LanguageFeatures" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testsuite name="test.TestSuite" time="0.062">
    <testcase name="something" classname="test.TestSuite" time="0.062">
      <error>org.scalatest.exceptions.TestFailedException: true did not equal false&#13;
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:396)&#13;
	at org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1370)&#13;
	at org.scalatest.Assertions$class.assert(Assertions.scala:487)&#13;
	at org.scalatest.FunSuite.assert(FunSuite.scala:1370)&#13;
	at test.TestSuite$$anonfun$1.apply$mcV$sp(Test.scala:10)&#13;
	at test.TestSuite$$anonfun$1.apply(Test.scala:10)&#13;
	at test.TestSuite$$anonfun$1.apply(Test.scala:10)&#13;
	at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)&#13;
	at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)&#13;
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)&#13;
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)&#13;
	at org.scalatest.Transformer.apply(Transformer.scala:22)&#13;
	at org.scalatest.Transformer.apply(Transformer.scala:20)&#13;
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:139)&#13;
	at org.scalatest.Suite$class.withFixture(Suite.scala:1106)&#13;
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1370)&#13;
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:136)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:148)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:148)&#13;
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)&#13;
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:148)&#13;
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1370)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:180)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:180)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)&#13;
	at scala.collection.immutable.List.foreach(List.scala:318)&#13;
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)&#13;
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)&#13;
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)&#13;
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:180)&#13;
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1370)&#13;
	at org.scalatest.Suite$class.run(Suite.scala:1423)&#13;
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1370)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:184)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:184)&#13;
	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)&#13;
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:184)&#13;
	at org.scalatest.FunSuite.run(FunSuite.scala:1370)&#13;
	at org.scalatest.junit.JUnitRunner.run(JUnitRunner.scala:97)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
