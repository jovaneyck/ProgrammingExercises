package test

class ValVarDef extends TestBase{
	//lazy val!
  behavior of "var" 
  
  it should "be mutable" in{
    var x = 1
    x = 2
    
    x should be(2)
  }
  
  behavior of "val"
  
  it should "be immutable" in {
    val x = 1
    
    //x = 2 //nope
  }
  
  it should "be immediately evaluated" in {
    var whatsGoingOn = ""
    
    val x = {whatsGoingOn = whatsGoingOn + "x"; 1} //note the VAL keyword
    whatsGoingOn = whatsGoingOn + "start"
    whatsGoingOn = whatsGoingOn + x
    
    whatsGoingOn should be("xstart1")
  }
  
  behavior of "def"
  
    it should "be lazily evaluated" in {
    var whatsGoingOn = ""
    
    def x = {whatsGoingOn = whatsGoingOn + "x"; 1} //note the DEF keyword
    whatsGoingOn = whatsGoingOn + "start"
    whatsGoingOn = whatsGoingOn + x
    
    whatsGoingOn should be("xstart1")
  }
}